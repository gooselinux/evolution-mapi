Index: evolution-mapi-0.28.3/src/addressbook/e-book-backend-mapi.c
===================================================================
--- evolution-mapi-0.28.3/src/addressbook/e-book-backend-mapi.c	(revision 1)
+++ evolution-mapi-0.28.3/src/addressbook/e-book-backend-mapi.c	(working copy)
@@ -282,7 +282,8 @@ build_restriction_emails_contains (struc
 static gboolean
 build_multiple_restriction_emails_contains (struct mapi_SRestriction *res, 
 				            struct mapi_SRestriction_or *or_res, 
-					    const char *query)
+					    const char *query,
+					    char **pemail)
 {
 	char *email=NULL, *tmp, *tmp1;
 	//Number of restriction to apply
@@ -310,6 +311,9 @@ build_multiple_restriction_emails_contai
 	if (email==NULL || !strchr (email, '@'))
 		return FALSE;
 
+	*pemail = g_strdup (email);
+	email = *pemail;
+
 	or_res[0].rt = RES_CONTENT;
 	or_res[0].res.resContent.fuzzy = FL_FULLSTRING | FL_IGNORECASE;
 	or_res[0].res.resContent.ulPropTag = PR_EMS_AB_MANAGER_T_UNICODE;
@@ -340,8 +344,6 @@ build_multiple_restriction_emails_contai
 	or_res[5].res.resContent.ulPropTag = PROP_TAG(PT_UNICODE, 0x80a4);
 	or_res[5].res.resContent.lpProp.value.lpszA = email;
 
-	res = g_new0 (struct mapi_SRestriction, 1);
-
 	res->rt = RES_OR;
 	res->res.resOr.cRes = res_count;
 	res->res.resOr.res = or_res;
@@ -386,6 +388,7 @@ e_book_backend_mapi_load_source (EBookBa
 	char *uri = NULL;
 	if (enable_debug)
 		printf("MAPI load source\n");
+
 	offline = e_source_get_property (source, "offline_sync");
 	if (offline  && g_str_equal (offline, "1"))
 		priv->marked_for_offline = TRUE;
@@ -414,7 +417,6 @@ e_book_backend_mapi_load_source (EBookBa
 	if (priv->marked_for_offline) {
  		priv->summary_file_name = get_filename_from_uri (priv->uri, "cache.summary"); 
 		if (g_file_test (priv->summary_file_name, G_FILE_TEST_EXISTS)) {
-			printf("Loading the summary\n");
 			priv->summary = e_book_backend_summary_new (priv->summary_file_name, 
 								    SUMMARY_FLUSH_TIMEOUT);
 			e_book_backend_summary_load (priv->summary);
@@ -423,7 +425,6 @@ e_book_backend_mapi_load_source (EBookBa
 
 		/* Load the cache as well.*/
 		if (e_book_backend_cache_exists (priv->uri)) {
-			printf("Loading the cache\n");
 			priv->cache = e_book_backend_cache_new (priv->uri);
 			priv->is_cache_ready = TRUE;
 		}
@@ -440,7 +441,6 @@ e_book_backend_mapi_load_source (EBookBa
 		e_book_backend_notify_writable (backend, FALSE);
 		e_book_backend_notify_connection_status (backend, FALSE);
 		if (!priv->cache) {
-			printf("Unfortunately the cache is not yet created\n");
 			return GNOME_Evolution_Addressbook_OfflineUnavailable;
 		}
 	} else {
@@ -451,7 +451,6 @@ e_book_backend_mapi_load_source (EBookBa
 	exchange_mapi_util_mapi_id_from_string (e_source_get_property (source, "folder-id"), &priv->fid);
 
 	tmp = e_source_get_property (source, "folder-id");
-	printf("Folder is %s %016" G_GINT64_MODIFIER "X\n", tmp, priv->fid);
 
 	/* Once aunthentication in address book works this can be removed */
 	if (priv->mode == GNOME_Evolution_Addressbook_MODE_LOCAL) {
@@ -516,8 +515,6 @@ mapi_book_build_props (struct SPropValue
 	struct SPropValue *props;
 	int i=0;
 
-	for (i=0; i<13; i++)
-		printf("hex %x\n", SPropTagArray->aulPropTag[i]);
 	i=0;
 	props = g_new0 (struct SPropValue, 50); //FIXME: Correct value tbd
 	set_str_value ( E_CONTACT_FILE_AS, SPropTagArray->aulPropTag[0]);
@@ -577,7 +574,6 @@ mapi_book_build_props (struct SPropValue
 		unix_to_nt_time (&nt, lt);
 		t.dwLowDateTime = (nt << 32) >> 32;
 		t.dwHighDateTime = (nt >> 32);
-		printf("sending bday\n");
 		set_SPropValue_proptag (&props[i++], PR_BIRTHDAY, &t);
 	}
 
@@ -596,7 +592,6 @@ mapi_book_build_props (struct SPropValue
 		unix_to_nt_time (&nt, lt);
 		t.dwLowDateTime = (nt << 32) >> 32;
 		t.dwHighDateTime = (nt >> 32);
-		printf("sending wed\n");
 		set_SPropValue_proptag (&props[i++], PR_WEDDING_ANNIVERSARY, &t);
 	}	
 	//Home and Office address
@@ -632,13 +627,11 @@ mapi_book_build_props (struct SPropValue
 	}
 
 	if (e_contact_get (contact, E_CONTACT_NICKNAME)) {
-		char *nick  = e_contact_get (contact, E_CONTACT_NICKNAME);
+		//char *nick  = e_contact_get (contact, E_CONTACT_NICKNAME);
 //		set_SPropValue_proptag (&props[i++], SPropTagArray->aulPropTag[10], nick);
-		printf("nickname %s %x\n", nick,  SPropTagArray->aulPropTag[10]);
 	}
 	
 	*value =props;
-	printf("Sending %d \n", i);
 	return i;
 }
 
@@ -770,10 +763,8 @@ e_book_backend_mapi_modify_contact (EBoo
 		contact = e_contact_new_from_vcard(vcard);
 		tmp = e_contact_get (contact, E_CONTACT_UID);
 		exchange_mapi_util_mapi_ids_from_uid (tmp, &fid, &mid);		
-		printf("modify id %s\n", tmp);
 		
 		status = exchange_mapi_modify_item (olFolderContacts, priv->fid, mid, mapi_book_build_name_id, contact, mapi_book_build_props, contact, NULL, NULL, NULL, 0);
-		printf("getting %d\n", status);
 		if (!status) {
 			e_data_book_respond_modify(book, opid, GNOME_Evolution_Addressbook_OtherError, NULL);
 			return;
@@ -783,7 +774,7 @@ e_book_backend_mapi_modify_contact (EBoo
 
 		//FIXME: Write it cleanly
 		if (priv->marked_for_offline && priv->is_cache_ready)
-			printf("delete cache %d\n", e_book_backend_cache_remove_contact (priv->cache, tmp));
+			e_book_backend_cache_remove_contact (priv->cache, tmp);
 
 		if (priv->marked_for_offline && priv->is_summary_ready)
 				e_book_backend_summary_remove_contact (priv->summary, tmp);
@@ -810,7 +801,6 @@ create_contact_item (FetchItemsCallbackD
 	
 	contact = emapidump_contact (item_data->properties);
 	suid = exchange_mapi_util_mapi_ids_to_uid (item_data->fid, item_data->mid);
-	printf("got contact %s\n", suid);
 	if (contact) {
 		/* UID of the contact is nothing but the concatenated string of hex id of folder and the message.*/
 		e_contact_set (contact, E_CONTACT_UID, suid);
@@ -931,7 +921,6 @@ create_contact_list_cb (FetchItemsCallba
 	
 	if (contact) {
 		/* UID of the contact is nothing but the concatenated string of hex id of folder and the message.*/
-		printf("Contact added %s\n", suid);
 		e_contact_set (contact, E_CONTACT_UID, suid);		
 //		e_contact_set (contact, E_CONTACT_BOOK_URI, priv->uri);
 		//FIXME: Should we set this? How can we get this first?
@@ -981,7 +970,6 @@ e_book_backend_mapi_get_contact_list (EB
 {
 	EBookBackendMAPIPrivate *priv = ((EBookBackendMAPI *) backend)->priv;
 
-	printf("mapi: get contact list %s\n", query);
 	switch (priv->mode) {
 	case GNOME_Evolution_Addressbook_MODE_LOCAL:
 		if (priv->marked_for_offline && priv->cache) {
@@ -999,7 +987,6 @@ e_book_backend_mapi_get_contact_list (EB
 			}
 
 			g_list_free (contacts);
-			printf("get_contact_list in  %s returning %d contacts\n", priv->uri, g_list_length (vcard_strings));
 			e_data_book_respond_get_contact_list (book, opid, GNOME_Evolution_Addressbook_Success, vcard_strings);
 			return;
 		}
@@ -1008,7 +995,6 @@ e_book_backend_mapi_get_contact_list (EB
 		return;
 		
 	case GNOME_Evolution_Addressbook_MODE_REMOTE:
-		printf("Mode : Remote\n");
 		if (priv->marked_for_offline && priv->cache) {
 			GList *contacts;
 			GList *vcard_strings = NULL;
@@ -1024,7 +1010,6 @@ e_book_backend_mapi_get_contact_list (EB
 			}
 
 			g_list_free (contacts);
-			printf("get_contact_list in %s  returning %d contacts\n", priv->uri, g_list_length (vcard_strings));			
 			e_data_book_respond_get_contact_list (book, opid, GNOME_Evolution_Addressbook_Success, vcard_strings);
 			return ;
 		}
@@ -1032,8 +1017,6 @@ e_book_backend_mapi_get_contact_list (EB
 			struct mapi_SRestriction res;
 			GList *vcard_str = NULL;
 
-			printf("Not marked for cache\n");
-
 			/* Unfortunately MAPI Doesn't support searching well, we do allow only online search for emails rest all are returned as error. */
 			if (!build_restriction_emails_contains (&res, query)) {
 				e_data_book_respond_get_contact_list (book, opid, GNOME_Evolution_Addressbook_OtherError, NULL);
@@ -1048,7 +1031,6 @@ e_book_backend_mapi_get_contact_list (EB
 				e_data_book_respond_get_contact_list (book, opid, GNOME_Evolution_Addressbook_OtherError, NULL);
 				return ;
 			}
-			printf("get_contact_list in %s returning %d contacts\n", priv->uri, g_list_length (vcard_str));			
 			e_data_book_respond_get_contact_list (book, opid, GNOME_Evolution_Addressbook_Success, vcard_str);
 			return ;
 			
@@ -1118,8 +1100,7 @@ emapidump_contact(struct mapi_SPropValue
 				nt |= t->dwLowDateTime;
 				time = nt_time_to_unix (nt);
 				e_contact_set (contact, mappings[i].field_id, ctime_r (&time, buff));
-			} else
-				printf("Nothing is printed\n");
+			}
 		} else if (mappings[i].contact_type == ELEMENT_TYPE_COMPLEX) {
 			if (mappings[i].field_id == E_CONTACT_IM_AIM) {
 				GList *list = g_list_append (NULL, value);
@@ -1220,7 +1201,6 @@ create_contact_cb (FetchItemsCallbackDat
 	char *suid;
 	
 	if (!e_flag_is_set (closure->running)) {
-		printf("Might be that the operation is cancelled. Lets ask our parent also to do.\n");
 		return FALSE;
 	}
 	
@@ -1242,7 +1222,7 @@ create_contact_cb (FetchItemsCallbackDat
 static void
 book_view_thread (gpointer data)
 {
-	struct mapi_SRestriction res;
+	struct mapi_SRestriction res = { 0 };
 	struct mapi_SRestriction_or *or_res = NULL;
 	EDataBookView *book_view = data;
 	BESearchClosure *closure = get_closure (book_view);
@@ -1257,7 +1237,7 @@ book_view_thread (gpointer data)
 	if (enable_debug)
 		printf("mapi: book view\n");
 	
-	g_object_ref (book_view);
+	e_data_book_view_ref (book_view);
 	e_flag_set (closure->running);
 						
 	e_data_book_view_notify_status_message (book_view, "Searching...");
@@ -1269,13 +1249,13 @@ book_view_thread (gpointer data)
 		if (!priv->marked_for_offline) {
 			e_data_book_view_notify_complete (book_view, 
 					GNOME_Evolution_Addressbook_OfflineUnavailable);
-			g_object_unref (book_view);
+			e_data_book_view_unref (book_view);
 			return;
 		}
 		if (!priv->cache) {
-			printf("The cache is not yet built\n");
 			e_data_book_view_notify_complete (book_view, 
 					GNOME_Evolution_Addressbook_Success);
+			e_data_book_view_unref (book_view);
 			return;
 		}
 
@@ -1288,7 +1268,7 @@ book_view_thread (gpointer data)
 				get_contacts_from_cache (backend, query, ids, book_view, closure);
 				g_ptr_array_free (ids, TRUE);
 			}
-			g_object_unref (book_view);
+			e_data_book_view_unref (book_view);
 			return;
 		}
 
@@ -1314,7 +1294,7 @@ book_view_thread (gpointer data)
 							  GNOME_Evolution_Addressbook_Success);
 		if (temp_list)
 			 g_list_free (temp_list);
-		g_object_unref (book_view);
+		e_data_book_view_unref (book_view);
 		return;
 		
 	case GNOME_Evolution_Addressbook_MODE_REMOTE:
@@ -1323,7 +1303,7 @@ book_view_thread (gpointer data)
 			e_book_backend_notify_auth_required (E_BOOK_BACKEND (backend));
 			e_data_book_view_notify_complete (book_view,
 						GNOME_Evolution_Addressbook_AuthenticationRequired);
-			g_object_unref (book_view);
+			e_data_book_view_unref (book_view);
 			return;
 		}
 		
@@ -1338,12 +1318,10 @@ book_view_thread (gpointer data)
 					get_contacts_from_cache (backend, query, ids, book_view, closure);
 					g_ptr_array_free (ids, TRUE);
 				}
-				g_object_unref (book_view);
+				e_data_book_view_unref (book_view);
 				return;
 			}
 			
-			printf("Summary seems to be not there or not a summary query, lets fetch from cache directly\n");
-			
 			/* We are already cached. Lets return from there. */
 			contacts = e_book_backend_cache_get_contacts (priv->cache, 
 								      query);
@@ -1363,16 +1341,19 @@ book_view_thread (gpointer data)
 								  GNOME_Evolution_Addressbook_Success);
 			if (temp_list)
 				 g_list_free (temp_list);
-			g_object_unref (book_view);
+			e_data_book_view_unref (book_view);
 			return;
 		}
 		
 		if (e_book_backend_summary_is_summary_query (priv->summary, query)) {
-			or_res = g_new (struct mapi_SRestriction_or, res_count);
+			gchar *email_ptr = NULL;
+			or_res = g_new0 (struct mapi_SRestriction_or, res_count);
 	
-			if (!build_multiple_restriction_emails_contains (&res, or_res, query)) {
+			if (!build_multiple_restriction_emails_contains (&res, or_res, query, &email_ptr)) {
 				e_data_book_view_notify_complete (book_view, 
 							  GNOME_Evolution_Addressbook_OtherError);
+				e_data_book_view_unref (book_view);
+				g_free (email_ptr);
 				return ;
 			} 
 
@@ -1385,13 +1366,16 @@ book_view_thread (gpointer data)
         	                if (e_flag_is_set (closure->running))
                 	                e_data_book_view_notify_complete (book_view, 
                         	                                          GNOME_Evolution_Addressbook_OtherError);      
-	                        g_object_unref (book_view);
-					
+	                        e_data_book_view_unref (book_view);
+
+				g_free (email_ptr);
 				if (or_res)
 					g_free(or_res);
 	
         	                return;
                 	}
+
+			g_free (email_ptr);
 		} else {
 			if (!exchange_mapi_connection_fetch_items (priv->fid, NULL, NULL,
 							known_book_mapi_ids, G_N_ELEMENTS (known_book_mapi_ids),
@@ -1401,7 +1385,7 @@ book_view_thread (gpointer data)
 				if (e_flag_is_set (closure->running))
 					e_data_book_view_notify_complete (book_view, 
 									  GNOME_Evolution_Addressbook_OtherError);      
-				g_object_unref (book_view);
+				e_data_book_view_unref (book_view);
 				return;
 			}
 		}
@@ -1409,9 +1393,6 @@ book_view_thread (gpointer data)
 		if (e_flag_is_set (closure->running))
 			e_data_book_view_notify_complete (book_view,
 							  GNOME_Evolution_Addressbook_Success);
-		g_object_unref (book_view);
-
-		
 
 	default:
 		break;
@@ -1420,7 +1401,7 @@ book_view_thread (gpointer data)
 	if (or_res)
 		g_free(or_res);
 
-	return;
+	e_data_book_view_unref (book_view);
 }
 
 static void
@@ -1490,14 +1471,12 @@ build_cache (EBookBackendMAPI *ebmapi)
 	
 	//FIXME: What if book view is NULL? Can it be? Check that.
 	if (!priv->cache) {
-		printf("Caching for the first time\n");
 		priv->cache = e_book_backend_cache_new (priv->uri);
 	}
 
 	if (!priv->summary) {
 		priv->summary = e_book_backend_summary_new (priv->summary_file_name, 
 							    SUMMARY_FLUSH_TIMEOUT);
-		printf("Summary file name is %s\n", priv->summary_file_name);
 	}
 	
 	e_file_cache_freeze_changes (E_FILE_CACHE (priv->cache));
@@ -1507,13 +1486,11 @@ build_cache (EBookBackendMAPI *ebmapi)
 						NULL, NULL, 
 						cache_contact_cb, ebmapi, 
 						MAPI_OPTIONS_FETCH_ALL)) {
-		printf("Error during caching addressbook\n");
 		e_file_cache_thaw_changes (E_FILE_CACHE (priv->cache));
 		return NULL;
 	}
 	tmp = g_strdup_printf("%d", (int)time (NULL));
 	e_book_backend_cache_set_time (priv->cache, tmp);
-	printf("setting time  %s\n", tmp);
 	g_free (tmp);
 	e_file_cache_thaw_changes (E_FILE_CACHE (priv->cache));
 	e_book_backend_summary_save (priv->summary);
@@ -1594,12 +1571,10 @@ e_book_backend_mapi_authenticate_user (E
 			return e_data_book_respond_authenticate_user (book, opid,GNOME_Evolution_Addressbook_OtherError);
 
 		if (priv->cache && priv->is_cache_ready) {
-			printf("FIXME: Should check for an update in the cache\n");
 //			g_thread_create ((GThreadFunc) update_cache, 
 	//					  backend, FALSE, backend);
 		} else if (priv->marked_for_offline && !priv->is_cache_ready) {
 			/* Means we dont have a cache. Lets build that first */
-			printf("Preparing to build cache\n");
 			g_thread_create ((GThreadFunc) build_cache, backend, FALSE, NULL);
 		} 
 		e_book_backend_set_is_writable (backend, TRUE);
Index: evolution-mapi-0.28.3/src/addressbook/e-book-backend-mapi-gal.c
===================================================================
--- evolution-mapi-0.28.3/src/addressbook/e-book-backend-mapi-gal.c	(revision 1)
+++ evolution-mapi-0.28.3/src/addressbook/e-book-backend-mapi-gal.c	(working copy)
@@ -703,7 +703,7 @@ book_view_thread (gpointer data)
 	if (enable_debug)
 		printf("mapi: book view\n");
 	
-	g_object_ref (book_view);
+	e_data_book_view_ref (book_view);
 	e_flag_set (closure->running);
 						
 	e_data_book_view_notify_status_message (book_view, "Searching...");
@@ -715,7 +715,7 @@ book_view_thread (gpointer data)
 				e_book_backend_notify_auth_required (E_BOOK_BACKEND (backend));
 				e_data_book_view_notify_complete (book_view,
 							GNOME_Evolution_Addressbook_AuthenticationRequired);
-				g_object_unref (book_view);
+				e_data_book_view_unref (book_view);
 				return;
 			}
 		
@@ -730,7 +730,7 @@ book_view_thread (gpointer data)
 						get_contacts_from_cache (backend, query, ids, book_view, closure);
 						g_ptr_array_free (ids, TRUE);
 					}
-					g_object_unref (book_view);
+					e_data_book_view_unref (book_view);
 					return;
 				}
 			
@@ -755,7 +755,7 @@ book_view_thread (gpointer data)
 									  GNOME_Evolution_Addressbook_Success);
 				if (temp_list)
 					 g_list_free (temp_list);
-				g_object_unref (book_view);
+				e_data_book_view_unref (book_view);
 				return;
 			}
 		
@@ -765,16 +765,17 @@ book_view_thread (gpointer data)
 				if (!build_multiple_restriction_emails_contains (&res, or_res, query)) {
 					e_data_book_view_notify_complete (book_view, 
 								  GNOME_Evolution_Addressbook_OtherError);
+					e_data_book_view_unref (book_view);
 					return ;
 				} 
 
 			if (e_flag_is_set (closure->running))
 				e_data_book_view_notify_complete (book_view,
 								  GNOME_Evolution_Addressbook_Success);
-			g_object_unref (book_view);
-			break;
 		}
 	}
+
+	e_data_book_view_unref (book_view);
 }
 
 static void
